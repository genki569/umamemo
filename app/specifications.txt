# うまメモ仕様書

## 1. システム概要
サービス名：うまメモ
目的：競馬のレース情報管理と予想共有プラットフォーム

## 2. 基本機能

### 2.1 ユーザー管理機能
- ユーザー登録
- ログイン/ログアウト
- ユーザー設定管理
- メンバーシップ管理

### 2.2 レース情報管理
- レース一覧表示
  - 日付別表示
  - 開催場所別グループ化
  - レース基本情報（時間、レース番号、レース名）
- レース詳細情報
  - 天候情報
  - トラックコンディション
  - 出走馬情報

### 2.3 予想・メモ機能
- レースメモ作成
- レースレビュー投稿
- レビュー購入システム

### 2.4 お気に入り機能
- 馬のお気に入り登録
- お気に入りリスト管理

## 3. データベース構造

### 3.1 主要テーブル
- Users（ユーザー情報）
- Horses（馬情報）
- Races（レース情報）
- Entries（出走登録）
- RaceReviews（レース予想/レビュー）
- Favorites（お気に入り）
- UserSettings（ユーザー設定）

### 3.2 補助テーブル
- ReviewPurchases（レビュー購入履歴）
- LoginHistory（ログイン履歴）
- SupportTickets（サポートチケット）
- MembershipChangeLog（会員状態変更履歴）
- PaymentLog（支払い履歴）

## 4. API仕様

### 4.1 認証関連
- POST /login：ログイン
- POST /logout：ログアウト
- POST /register：新規登録

### 4.2 レース情報
- GET /races：レース一覧取得
- GET /race/<id>：レース詳細取得
- GET /race/<id>/entries：出走馬情報取得

### 4.3 予想・レビュー
- POST /race/<id>/review：レビュー投稿
- GET /race/<id>/reviews：レビュー一覧取得
- POST /review/<id>/purchase：レビュー購入

### 4.4 お気に入り
- POST /horse/<id>/favorite：お気に入り登録
- DELETE /horse/<id>/favorite：お気に入り解除
- GET /user/favorites：お気に入りリスト取得

## 5. セキュリティ要件
- パスワードのハッシュ化
- セッション管理
- CSRF対策
- XSS対策
- SQLインジェクション対策

## 6. 非機能要件

### 6.1 パフォーマンス
- ページロード時間：3秒以内
- 同時接続ユーザー数：1000人以上
- データベースレスポンス：1秒以内

### 6.2 可用性
- サービス稼働時間：24時間365日
- 計画メンテナンス：月1回
- バックアップ：日次

### 6.3 拡張性
- モジュール化された設計
- スケーラブルなデータベース構造
- APIファーストの設計思想

## 7. 開発環境
- バックエンド：Python/Flask
- データベース：SQLAlchemy
- 認証：Flask-Login
- フロントエンド：HTML/JavaScript
  - （将来的にReactへの移行を検討）

## 8. 今後の開発予定
- Reactへのフロントエンド移行
- リアルタイム通知システムの実装
- AI予想機能の追加
- モバイルアプリの開発

## 9. 保守・運用
- ログ管理
- エラー監視
- パフォーマンスモニタリング
- ユーザーサポート体制

## 10. コンプライアンス
- 個人情報保護法対応
- 特定商取引

Host conoha
    HostName www288.conoha.ne.jp
    User c4832111
    Port 8022
    IdentityFile ~/.ssh/conoha_key